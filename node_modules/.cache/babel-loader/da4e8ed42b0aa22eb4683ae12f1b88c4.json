{"ast":null,"code":"var _jsxFileName = \"/home/naz/graphql/src/pages/Profile.js\";\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { useAuth } from '../utils/AuthContext';\n\n// Icons (lucide-react)\nimport { LogOut, Award, TrendingUp, Clock, Activity } from 'lucide-react';\n\n/**\n * 1) UPDATED GraphQL query\n *    Includes transactions (XP), progresses, and results with nested object\n */\nconst GET_USER_DATA = gql`\n  query GetUserData {\n    user {\n      id\n      login\n      transactions(where: {type: {_eq: \"xp\"}}, order_by: {createdAt: asc}) {\n        amount\n        createdAt\n        path\n        object {\n          id\n          name\n          type\n        }\n      }\n      progresses(order_by: {createdAt: asc}) {\n        grade\n        createdAt\n        path\n        object {\n          id\n          name\n          type\n        }\n      }\n      results(order_by: {createdAt: asc}) {\n        grade\n        createdAt\n        path\n        object {\n          id\n          name\n          type\n        }\n      }\n    }\n  }\n`;\n\n/**\n * 2) Data processing helpers (from your instructions)\n */\n\n// XP data processing\nconst processXPData = transactions => {\n  return transactions.reduce((acc, tx) => {\n    const date = new Date(tx.createdAt).toLocaleDateString();\n    acc[date] = (acc[date] || 0) + tx.amount;\n    return acc;\n  }, {});\n};\n\n// Project data processing\nconst processProjectData = progresses => {\n  return progresses.reduce((acc, prog) => {\n    var _prog$object;\n    const projectName = ((_prog$object = prog.object) === null || _prog$object === void 0 ? void 0 : _prog$object.name) || prog.path;\n    if (!acc[projectName]) {\n      acc[projectName] = {\n        passed: 0,\n        failed: 0,\n        total: 0\n      };\n    }\n    acc[projectName].total++;\n    if (prog.grade > 0) acc[projectName].passed++;else acc[projectName].failed++;\n    return acc;\n  }, {});\n};\n\n// Audit data processing\nconst processAuditData = results => {\n  return results.reduce((acc, res) => {\n    // We'll bucket them by \"month\" for the bar chart\n    const month = new Date(res.createdAt).toLocaleDateString('en-US', {\n      month: 'short'\n    });\n    if (!acc[month]) acc[month] = {\n      passed: 0,\n      failed: 0\n    };\n    if (res.grade > 0) acc[month].passed++;else acc[month].failed++;\n    return acc;\n  }, {});\n};\n\n/**\n * 3) SVG helper functions\n */\n// createPathD: builds an SVG Path's \"d\" attribute\nconst createPathD = (points, width, height) => {\n  return points.map((point, i) => `${i === 0 ? 'M' : 'L'} ${point.x * width} ${point.y * height}`).join(' ');\n};\n\n// calculatePoints: normalizes data to (x, y) points in [0..1] coords\nconst calculatePoints = (data, width, height) => {\n  const max = Math.max(...Object.values(data));\n  const entries = Object.entries(data);\n  if (entries.length <= 1) {\n    // Avoid dividing by zero if there's only 1 point\n    return entries.map(([_, value], i) => ({\n      x: 0.5,\n      y: 1 - value / max\n    }));\n  }\n  return entries.map(([_, value], i) => ({\n    x: i / (entries.length - 1),\n    y: 1 - value / max\n  }));\n};\n\n/**\n * 4) Custom SVG Components\n */\n\n// XPLineGraph: line chart of XP over time\nfunction XPLineGraph({\n  data,\n  width = 600,\n  height = 300\n}) {\n  const points = calculatePoints(data, width, height);\n  const d = createPathD(points, width, height);\n\n  // We'll also mark small circles at each data point\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: `0 0 ${width} ${height}`,\n    style: {\n      background: '#f9fafb'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"polyline\", {\n    fill: \"none\",\n    stroke: \"#e5e7eb\",\n    strokeWidth: \"1\",\n    points: `0,${height} ${width},${height}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: d,\n    stroke: \"#6366F1\",\n    strokeWidth: \"2\",\n    fill: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), points.map((pt, idx) => /*#__PURE__*/React.createElement(\"circle\", {\n    key: idx,\n    cx: pt.x * width,\n    cy: pt.y * height,\n    r: \"4\",\n    fill: \"#6366F1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })));\n}\n\n// ProjectPieChart: pie chart showing pass/fail ratio for all projects combined\n// or some aggregated metric\nfunction ProjectPieChart({\n  data,\n  size = 300\n}) {\n  // We'll sum all passed/failed across all projects\n  let totalPassed = 0;\n  let totalFailed = 0;\n  Object.values(data).forEach(({\n    passed,\n    failed\n  }) => {\n    totalPassed += passed;\n    totalFailed += failed;\n  });\n  const total = totalPassed + totalFailed || 1; // avoid div by zero\n\n  // \"passedAngle\" fraction from 0..2Ï€\n  const passedAngle = totalPassed / total * 2 * Math.PI;\n\n  // We'll draw two arcs: pass + fail\n  const center = size / 2;\n  const radius = size / 2 - 10; // some padding\n\n  // Helper to convert angle -> x,y\n  const polarToCartesian = (cx, cy, r, angle) => [cx + r * Math.cos(angle), cy + r * Math.sin(angle)];\n\n  // Build arc path\n  const buildArc = (startAngle, endAngle, color) => {\n    const largeArc = endAngle - startAngle > Math.PI ? 1 : 0;\n    const [startX, startY] = polarToCartesian(center, center, radius, startAngle);\n    const [endX, endY] = polarToCartesian(center, center, radius, endAngle);\n    return /*#__PURE__*/React.createElement(\"path\", {\n      d: [`M ${startX} ${startY}`, `A ${radius} ${radius} 0 ${largeArc} 1 ${endX} ${endY}`, `L ${center} ${center}`, 'Z'].join(' '),\n      fill: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: size,\n    height: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, buildArc(0, passedAngle, '#10B981'), buildArc(passedAngle, 2 * Math.PI, '#EF4444'), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: center,\n    cy: center,\n    r: radius * 0.5,\n    fill: \"#fff\",\n    opacity: 0.1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    x: center,\n    y: center,\n    textAnchor: \"middle\",\n    fill: \"#111\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    dy: \".3em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, `Pass: ${totalPassed}, Fail: ${totalFailed}`));\n}\n\n// AuditBarGraph: bar chart by month for passed/failed\nfunction AuditBarGraph({\n  data,\n  width = 600,\n  height = 300\n}) {\n  const months = Object.keys(data);\n  if (!months.length) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 12\n      }\n    }, \"No audit data found\");\n  }\n\n  // We'll figure out the max possible \"passed + failed\" to scale bars\n  let maxCount = 0;\n  months.forEach(month => {\n    const {\n      passed,\n      failed\n    } = data[month];\n    const total = passed + failed;\n    if (total > maxCount) {\n      maxCount = total;\n    }\n  });\n  maxCount = maxCount || 1;\n  const barWidth = width / (months.length * 2);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: `0 0 ${width} ${height}`,\n    style: {\n      background: '#f9fafb'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"0\",\n    y1: height - 1,\n    x2: width,\n    y2: height - 1,\n    stroke: \"#ddd\",\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }), months.map((month, idx) => {\n    const {\n      passed,\n      failed\n    } = data[month];\n    const total = passed + failed;\n    // scale\n    const barHeight = total / maxCount * (height - 20); // some top padding\n    const x = idx * (barWidth * 2) + barWidth;\n    const y = height - barHeight - 1;\n    return /*#__PURE__*/React.createElement(\"g\", {\n      key: month,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: x - barWidth / 2,\n      y: y,\n      width: barWidth,\n      height: barHeight,\n      fill: \"#EF4444\",\n      opacity: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }), passed > 0 && /*#__PURE__*/React.createElement(\"rect\", {\n      x: x - barWidth / 2,\n      y: y + barHeight * (1 - passed / total),\n      width: barWidth,\n      height: barHeight * (passed / total),\n      fill: \"#10B981\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      x: x,\n      y: height - 3,\n      textAnchor: \"middle\",\n      fill: \"#111\",\n      fontSize: \"0.8rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, month));\n  }));\n}\n\n/**\n * Main Profile Component\n */\nexport default function Profile() {\n  var _data$user;\n  const {\n    logout\n  } = useAuth();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_USER_DATA);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.centeredScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.loadingText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.centeredScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.errorText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, \"Error loading data\"));\n  }\n\n  // There's only one user row for your authenticated user\n  const user = data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user[0];\n  if (!user) return null;\n\n  // 1) XP Data\n  const xpObj = processXPData(user.transactions || []);\n\n  // Turn xpObj => array or keep object for line chart\n  // We'll pass it directly to XPLineGraph as an object\n\n  // 2) Projects data (pass/fail ratio per project)\n  const projectObj = processProjectData(user.progresses || []);\n\n  // 3) Audit data by month from results\n  const auditObj = processAuditData(user.results || []);\n\n  // Also get some overall stats\n  const totalXP = Object.values(xpObj).reduce((acc, val) => acc + val, 0);\n  const totalPassed = Object.values(projectObj).reduce((acc, proj) => acc + proj.passed, 0);\n  const totalFailed = Object.values(projectObj).reduce((acc, proj) => acc + proj.failed, 0);\n  const totalProjects = totalPassed + totalFailed;\n  const auditRatio = totalProjects ? (totalPassed / totalProjects * 100).toFixed(1) : 0;\n  const learningHours = Math.round(totalXP / 100);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    style: styles.navbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.brandContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Activity, {\n    style: styles.brandIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: styles.brandText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, \"Learning Analytics\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.userInfoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0,\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, user.login), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0,\n      fontSize: '0.8rem',\n      color: '#666'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, \"ID: \", user.id)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: logout,\n    style: styles.logoutBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LogOut, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, \"Logout\"))))), /*#__PURE__*/React.createElement(\"main\", {\n    style: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.welcomeSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: styles.welcomeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  }, \"Welcome back, \", user.login, \"!\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.welcomeSubtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, \"Here's your learning progress overview\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.userInfoCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: styles.userInfoTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, \"User Information\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.userInfoGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.userInfoItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 17\n    }\n  }, \"ID:\"), \" \", user.id), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.userInfoItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, \"Login:\"), \" \", user.login))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCardInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TrendingUp, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.statsCardLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 19\n    }\n  }, \"Total XP\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.statsCardValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 19\n    }\n  }, totalXP.toLocaleString())))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCardInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Award, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.statsCardLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 19\n    }\n  }, \"Audit Ratio\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.statsCardValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 19\n    }\n  }, auditRatio, \"%\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCardInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Award, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.statsCardLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 19\n    }\n  }, \"Projects Done\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.statsCardValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 19\n    }\n  }, totalProjects)))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCardInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statsCardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.statsCardLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 19\n    }\n  }, \"Learning Hours\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.statsCardValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }\n  }, learningHours))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.chartsGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.chartCardWide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: styles.chartTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }, \"XP Over Time\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  }, Object.keys(xpObj).length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 19\n    }\n  }, \"No XP data found\") : /*#__PURE__*/React.createElement(XPLineGraph, {\n    data: xpObj,\n    width: 600,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.chartCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: styles.chartTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }, \"Project Pass/Fail (Pie)\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '300px',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 15\n    }\n  }, Object.keys(projectObj).length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 19\n    }\n  }, \"No project data found\") : /*#__PURE__*/React.createElement(ProjectPieChart, {\n    data: projectObj,\n    size: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.chartCardFull,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: styles.chartTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }\n  }, \"Monthly Audits\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 13\n    }\n  }, Object.keys(auditObj).length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }, \"No audit data found\") : /*#__PURE__*/React.createElement(AuditBarGraph, {\n    data: auditObj,\n    width: 600,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }))))));\n}\n\n/** Inline Styles (no external CSS) **/\nconst styles = {\n  root: {\n    minHeight: '100vh',\n    backgroundColor: '#f8fafc',\n    fontFamily: '\"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif',\n    color: '#111'\n  },\n  centeredScreen: {\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f8fafc'\n  },\n  loadingText: {\n    fontSize: '24px',\n    color: '#555',\n    opacity: 0.8\n  },\n  errorText: {\n    fontSize: '24px',\n    color: 'red'\n  },\n  navbar: {\n    position: 'fixed',\n    top: 0,\n    width: '100%',\n    backgroundColor: '#fff',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    borderBottom: '1px solid #e2e8f0',\n    zIndex: 50,\n    height: '64px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  navWrapper: {\n    maxWidth: '1200px',\n    margin: '0 auto',\n    padding: '0 1rem',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem'\n  },\n  brandIcon: {\n    width: '32px',\n    height: '32px',\n    color: '#6b21a8'\n  },\n  brandText: {\n    fontSize: '1.25rem',\n    fontWeight: 'bold',\n    background: 'linear-gradient(90deg, #6b21a8, #6366F1)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent'\n  },\n  userInfoContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '1rem'\n  },\n  logoutBtn: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    background: 'linear-gradient(90deg, #ef4444, #ec4899)',\n    color: '#fff',\n    border: 'none',\n    padding: '0.6rem 1rem',\n    borderRadius: '8px',\n    cursor: 'pointer'\n  },\n  main: {\n    paddingTop: '80px',\n    paddingBottom: '1rem'\n  },\n  container: {\n    maxWidth: '1200px',\n    margin: '0 auto',\n    padding: '0 1rem'\n  },\n  welcomeSection: {\n    textAlign: 'center',\n    marginBottom: '2rem'\n  },\n  welcomeTitle: {\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    margin: 0,\n    color: '#1e293b'\n  },\n  welcomeSubtitle: {\n    marginTop: '0.5rem',\n    color: '#475569'\n  },\n  userInfoCard: {\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n    border: '1px solid #e2e8f0',\n    padding: '1rem',\n    marginBottom: '2rem'\n  },\n  userInfoTitle: {\n    fontSize: '1.25rem',\n    margin: '0 0 1rem',\n    color: '#1e293b',\n    textAlign: 'center'\n  },\n  userInfoGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    gap: '0.5rem'\n  },\n  userInfoItem: {\n    fontSize: '1rem',\n    padding: '0.5rem 0'\n  },\n  statsGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))',\n    gap: '1rem',\n    marginBottom: '2rem'\n  },\n  statsCard: {\n    transition: 'transform 0.2s'\n  },\n  statsCardInner: {\n    background: 'linear-gradient(135deg, #6b21a8, #4c1d95)',\n    borderRadius: '12px',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n    padding: '1rem',\n    color: '#fff',\n    display: 'flex',\n    gap: '1rem',\n    alignItems: 'center'\n  },\n  statsCardIcon: {\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    borderRadius: '8px',\n    padding: '0.5rem',\n    backdropFilter: 'blur(2px)'\n  },\n  statsCardLabel: {\n    margin: 0,\n    opacity: 0.8\n  },\n  statsCardValue: {\n    margin: 0,\n    fontSize: '1.5rem',\n    fontWeight: 'bold'\n  },\n  chartsGrid: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    // 2 columns for the first row of charts\n    gap: '1rem',\n    marginBottom: '2rem'\n  },\n  chartCardWide: {\n    gridColumn: '1 / 2',\n    // Left column\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n    padding: '1rem',\n    border: '1px solid #e2e8f0'\n  },\n  chartCard: {\n    gridColumn: '2 / 3',\n    // Right column\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n    padding: '1rem',\n    border: '1px solid #e2e8f0'\n  },\n  chartCardFull: {\n    // Full width chart row\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n    padding: '1rem',\n    border: '1px solid #e2e8f0',\n    marginBottom: '1rem'\n  },\n  chartTitle: {\n    fontSize: '1.25rem',\n    margin: '0 0 1rem',\n    color: '#1e293b',\n    textAlign: 'center'\n  }\n};","map":{"version":3,"names":["React","useQuery","gql","useAuth","LogOut","Award","TrendingUp","Clock","Activity","GET_USER_DATA","processXPData","transactions","reduce","acc","tx","date","Date","createdAt","toLocaleDateString","amount","processProjectData","progresses","prog","_prog$object","projectName","object","name","path","passed","failed","total","grade","processAuditData","results","res","month","createPathD","points","width","height","map","point","i","x","y","join","calculatePoints","data","max","Math","Object","values","entries","length","_","value","XPLineGraph","d","createElement","viewBox","style","background","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","fill","stroke","strokeWidth","pt","idx","key","cx","cy","r","ProjectPieChart","size","totalPassed","totalFailed","forEach","passedAngle","PI","center","radius","polarToCartesian","angle","cos","sin","buildArc","startAngle","endAngle","color","largeArc","startX","startY","endX","endY","opacity","textAnchor","fontSize","fontWeight","dy","AuditBarGraph","months","keys","maxCount","barWidth","x1","y1","x2","y2","barHeight","Profile","_data$user","logout","loading","error","styles","centeredScreen","loadingText","errorText","user","xpObj","projectObj","auditObj","totalXP","val","proj","totalProjects","auditRatio","toFixed","learningHours","round","root","navbar","navWrapper","brandContainer","brandIcon","brandText","userInfoContainer","textAlign","margin","login","id","onClick","logoutBtn","main","container","welcomeSection","welcomeTitle","welcomeSubtitle","userInfoCard","userInfoTitle","userInfoGrid","userInfoItem","statsGrid","statsCard","statsCardInner","statsCardIcon","statsCardLabel","statsCardValue","toLocaleString","chartsGrid","chartCardWide","chartTitle","chartCard","display","justifyContent","chartCardFull","minHeight","backgroundColor","fontFamily","alignItems","position","top","boxShadow","borderBottom","zIndex","maxWidth","padding","gap","WebkitBackgroundClip","WebkitTextFillColor","border","borderRadius","cursor","paddingTop","paddingBottom","marginBottom","marginTop","gridTemplateColumns","transition","backdropFilter","gridColumn"],"sources":["/home/naz/graphql/src/pages/Profile.js"],"sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { useAuth } from '../utils/AuthContext';\n\n// Icons (lucide-react)\nimport {\n  LogOut,\n  Award,\n  TrendingUp,\n  Clock,\n  Activity\n} from 'lucide-react';\n\n/**\n * 1) UPDATED GraphQL query\n *    Includes transactions (XP), progresses, and results with nested object\n */\nconst GET_USER_DATA = gql`\n  query GetUserData {\n    user {\n      id\n      login\n      transactions(where: {type: {_eq: \"xp\"}}, order_by: {createdAt: asc}) {\n        amount\n        createdAt\n        path\n        object {\n          id\n          name\n          type\n        }\n      }\n      progresses(order_by: {createdAt: asc}) {\n        grade\n        createdAt\n        path\n        object {\n          id\n          name\n          type\n        }\n      }\n      results(order_by: {createdAt: asc}) {\n        grade\n        createdAt\n        path\n        object {\n          id\n          name\n          type\n        }\n      }\n    }\n  }\n`;\n\n/**\n * 2) Data processing helpers (from your instructions)\n */\n\n// XP data processing\nconst processXPData = (transactions) => {\n  return transactions.reduce((acc, tx) => {\n    const date = new Date(tx.createdAt).toLocaleDateString();\n    acc[date] = (acc[date] || 0) + tx.amount;\n    return acc;\n  }, {});\n};\n\n// Project data processing\nconst processProjectData = (progresses) => {\n  return progresses.reduce((acc, prog) => {\n    const projectName = prog.object?.name || prog.path;\n    if (!acc[projectName]) {\n      acc[projectName] = { passed: 0, failed: 0, total: 0 };\n    }\n    acc[projectName].total++;\n    if (prog.grade > 0) acc[projectName].passed++;\n    else acc[projectName].failed++;\n    return acc;\n  }, {});\n};\n\n// Audit data processing\nconst processAuditData = (results) => {\n  return results.reduce((acc, res) => {\n    // We'll bucket them by \"month\" for the bar chart\n    const month = new Date(res.createdAt).toLocaleDateString('en-US', {\n      month: 'short'\n    });\n    if (!acc[month]) acc[month] = { passed: 0, failed: 0 };\n    if (res.grade > 0) acc[month].passed++;\n    else acc[month].failed++;\n    return acc;\n  }, {});\n};\n\n/**\n * 3) SVG helper functions\n */\n// createPathD: builds an SVG Path's \"d\" attribute\nconst createPathD = (points, width, height) => {\n  return points\n    .map((point, i) => `${i === 0 ? 'M' : 'L'} ${point.x * width} ${point.y * height}`)\n    .join(' ');\n};\n\n// calculatePoints: normalizes data to (x, y) points in [0..1] coords\nconst calculatePoints = (data, width, height) => {\n  const max = Math.max(...Object.values(data));\n  const entries = Object.entries(data);\n  if (entries.length <= 1) {\n    // Avoid dividing by zero if there's only 1 point\n    return entries.map(([_, value], i) => ({\n      x: 0.5, \n      y: 1 - value / max\n    }));\n  }\n  return entries.map(([_, value], i) => ({\n    x: i / (entries.length - 1),\n    y: 1 - value / max\n  }));\n};\n\n/**\n * 4) Custom SVG Components\n */\n\n// XPLineGraph: line chart of XP over time\nfunction XPLineGraph({ data, width = 600, height = 300 }) {\n  const points = calculatePoints(data, width, height);\n  const d = createPathD(points, width, height);\n\n  // We'll also mark small circles at each data point\n  return (\n    <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} style={{ background: '#f9fafb' }}>\n      <polyline \n        fill=\"none\" \n        stroke=\"#e5e7eb\" \n        strokeWidth=\"1\" \n        points={`0,${height} ${width},${height}`}\n      />\n      <path d={d} stroke=\"#6366F1\" strokeWidth=\"2\" fill=\"none\" />\n      {points.map((pt, idx) => (\n        <circle\n          key={idx}\n          cx={pt.x * width}\n          cy={pt.y * height}\n          r=\"4\"\n          fill=\"#6366F1\"\n        />\n      ))}\n    </svg>\n  );\n}\n\n// ProjectPieChart: pie chart showing pass/fail ratio for all projects combined\n// or some aggregated metric\nfunction ProjectPieChart({ data, size = 300 }) {\n  // We'll sum all passed/failed across all projects\n  let totalPassed = 0;\n  let totalFailed = 0;\n  Object.values(data).forEach(({ passed, failed }) => {\n    totalPassed += passed;\n    totalFailed += failed;\n  });\n  const total = totalPassed + totalFailed || 1; // avoid div by zero\n\n  // \"passedAngle\" fraction from 0..2Ï€\n  const passedAngle = (totalPassed / total) * 2 * Math.PI;\n\n  // We'll draw two arcs: pass + fail\n  const center = size / 2;\n  const radius = size / 2 - 10; // some padding\n\n  // Helper to convert angle -> x,y\n  const polarToCartesian = (cx, cy, r, angle) => [\n    cx + r * Math.cos(angle),\n    cy + r * Math.sin(angle)\n  ];\n\n  // Build arc path\n  const buildArc = (startAngle, endAngle, color) => {\n    const largeArc = endAngle - startAngle > Math.PI ? 1 : 0;\n    const [startX, startY] = polarToCartesian(center, center, radius, startAngle);\n    const [endX, endY] = polarToCartesian(center, center, radius, endAngle);\n    return (\n      <path\n        d={[\n          `M ${startX} ${startY}`,\n          `A ${radius} ${radius} 0 ${largeArc} 1 ${endX} ${endY}`,\n          `L ${center} ${center}`,\n          'Z'\n        ].join(' ')}\n        fill={color}\n      />\n    );\n  };\n\n  return (\n    <svg width={size} height={size}>\n      {/* Pass arc */}\n      {buildArc(0, passedAngle, '#10B981')} \n      {/* Fail arc */}\n      {buildArc(passedAngle, 2 * Math.PI, '#EF4444')}\n      <circle cx={center} cy={center} r={radius * 0.5} fill=\"#fff\" opacity={0.1} />\n      {/* Legend-ish text in center */}\n      <text\n        x={center}\n        y={center}\n        textAnchor=\"middle\"\n        fill=\"#111\"\n        fontSize=\"1rem\"\n        fontWeight=\"bold\"\n        dy=\".3em\"\n      >\n        {`Pass: ${totalPassed}, Fail: ${totalFailed}`}\n      </text>\n    </svg>\n  );\n}\n\n// AuditBarGraph: bar chart by month for passed/failed\nfunction AuditBarGraph({ data, width = 600, height = 300 }) {\n  const months = Object.keys(data);\n  if (!months.length) {\n    return <p>No audit data found</p>;\n  }\n\n  // We'll figure out the max possible \"passed + failed\" to scale bars\n  let maxCount = 0;\n  months.forEach((month) => {\n    const { passed, failed } = data[month];\n    const total = passed + failed;\n    if (total > maxCount) {\n      maxCount = total;\n    }\n  });\n  maxCount = maxCount || 1;\n\n  const barWidth = width / (months.length * 2);\n\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={{ background: '#f9fafb' }}\n    >\n      {/* X-axis line */}\n      <line\n        x1=\"0\"\n        y1={height - 1}\n        x2={width}\n        y2={height - 1}\n        stroke=\"#ddd\"\n        strokeWidth=\"2\"\n      />\n      {months.map((month, idx) => {\n        const { passed, failed } = data[month];\n        const total = passed + failed;\n        // scale\n        const barHeight = (total / maxCount) * (height - 20); // some top padding\n        const x = idx * (barWidth * 2) + barWidth;\n        const y = height - barHeight - 1;\n\n        return (\n          <g key={month}>\n            {/* Outer rect for total attempts */}\n            <rect\n              x={x - (barWidth / 2)}\n              y={y}\n              width={barWidth}\n              height={barHeight}\n              fill=\"#EF4444\"\n              opacity={0.5}\n            />\n            {/* Inner portion for \"passed\" ratio */}\n            {passed > 0 && (\n              <rect\n                x={x - (barWidth / 2)}\n                y={y + barHeight * (1 - passed / total)}\n                width={barWidth}\n                height={barHeight * (passed / total)}\n                fill=\"#10B981\"\n              />\n            )}\n            {/* Label for month below the bar */}\n            <text\n              x={x}\n              y={height - 3}\n              textAnchor=\"middle\"\n              fill=\"#111\"\n              fontSize=\"0.8rem\"\n            >\n              {month}\n            </text>\n          </g>\n        );\n      })}\n    </svg>\n  );\n}\n\n/**\n * Main Profile Component\n */\nexport default function Profile() {\n  const { logout } = useAuth();\n  const { loading, error, data } = useQuery(GET_USER_DATA);\n\n  if (loading) {\n    return (\n      <div style={styles.centeredScreen}>\n        <div style={styles.loadingText}>Loading...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div style={styles.centeredScreen}>\n        <div style={styles.errorText}>Error loading data</div>\n      </div>\n    );\n  }\n\n  // There's only one user row for your authenticated user\n  const user = data?.user?.[0];\n  if (!user) return null;\n\n  // 1) XP Data\n  const xpObj = processXPData(user.transactions || []);\n\n  // Turn xpObj => array or keep object for line chart\n  // We'll pass it directly to XPLineGraph as an object\n\n  // 2) Projects data (pass/fail ratio per project)\n  const projectObj = processProjectData(user.progresses || []);\n\n  // 3) Audit data by month from results\n  const auditObj = processAuditData(user.results || []);\n\n  // Also get some overall stats\n  const totalXP = Object.values(xpObj).reduce((acc, val) => acc + val, 0);\n  const totalPassed = Object.values(projectObj).reduce((acc, proj) => acc + proj.passed, 0);\n  const totalFailed = Object.values(projectObj).reduce((acc, proj) => acc + proj.failed, 0);\n  const totalProjects = totalPassed + totalFailed;\n  const auditRatio = totalProjects ? ((totalPassed / totalProjects) * 100).toFixed(1) : 0;\n  const learningHours = Math.round(totalXP / 100);\n\n  return (\n    <div style={styles.root}>\n      {/* NAVBAR */}\n      <nav style={styles.navbar}>\n        <div style={styles.navWrapper}>\n          {/* Brand / Title */}\n          <div style={styles.brandContainer}>\n            <Activity style={styles.brandIcon} />\n            <span style={styles.brandText}>Learning Analytics</span>\n          </div>\n          {/* User Info & Logout */}\n          <div style={styles.userInfoContainer}>\n            <div style={{ textAlign: 'right' }}>\n              <p style={{ margin: 0, fontWeight: 500 }}>{user.login}</p>\n              <p style={{ margin: 0, fontSize: '0.8rem', color: '#666' }}>\n                ID: {user.id}\n              </p>\n            </div>\n            <button onClick={logout} style={styles.logoutBtn}>\n              <LogOut size={18} />\n              <span>Logout</span>\n            </button>\n          </div>\n        </div>\n      </nav>\n\n      {/* MAIN CONTENT */}\n      <main style={styles.main}>\n        <div style={styles.container}>\n          {/* Welcome Header */}\n          <div style={styles.welcomeSection}>\n            <h1 style={styles.welcomeTitle}>\n              Welcome back, {user.login}!\n            </h1>\n            <p style={styles.welcomeSubtitle}>\n              Here&apos;s your learning progress overview\n            </p>\n          </div>\n\n          {/* USER INFO (Minimal) */}\n          <div style={styles.userInfoCard}>\n            <h2 style={styles.userInfoTitle}>User Information</h2>\n            <div style={styles.userInfoGrid}>\n              <div style={styles.userInfoItem}>\n                <strong>ID:</strong> {user.id}\n              </div>\n              <div style={styles.userInfoItem}>\n                <strong>Login:</strong> {user.login}\n              </div>\n            </div>\n          </div>\n\n          {/* STATS GRID */}\n          <div style={styles.statsGrid}>\n            {/* Total XP */}\n            <div style={styles.statsCard}>\n              <div style={styles.statsCardInner}>\n                <div style={styles.statsCardIcon}>\n                  <TrendingUp style={{ color: '#fff' }} />\n                </div>\n                <div>\n                  <p style={styles.statsCardLabel}>Total XP</p>\n                  <p style={styles.statsCardValue}>\n                    {totalXP.toLocaleString()}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Audit Ratio (aka pass ratio) */}\n            <div style={styles.statsCard}>\n              <div style={styles.statsCardInner}>\n                <div style={styles.statsCardIcon}>\n                  <Award style={{ color: '#fff' }} />\n                </div>\n                <div>\n                  <p style={styles.statsCardLabel}>Audit Ratio</p>\n                  <p style={styles.statsCardValue}>{auditRatio}%</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Total Projects Done */}\n            <div style={styles.statsCard}>\n              <div style={styles.statsCardInner}>\n                <div style={styles.statsCardIcon}>\n                  <Award style={{ color: '#fff' }} />\n                </div>\n                <div>\n                  <p style={styles.statsCardLabel}>Projects Done</p>\n                  <p style={styles.statsCardValue}>{totalProjects}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Learning Hours */}\n            <div style={styles.statsCard}>\n              <div style={styles.statsCardInner}>\n                <div style={styles.statsCardIcon}>\n                  <Clock style={{ color: '#fff' }} />\n                </div>\n                <div>\n                  <p style={styles.statsCardLabel}>Learning Hours</p>\n                  <p style={styles.statsCardValue}>{learningHours}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* CHARTS */}\n          <div style={styles.chartsGrid}>\n            {/* 1) XPLineGraph (XP Over Time) */}\n            <div style={styles.chartCardWide}>\n              <h2 style={styles.chartTitle}>XP Over Time</h2>\n              <div style={{ width: '100%', height: '300px' }}>\n                {Object.keys(xpObj).length === 0 ? (\n                  <p style={{ textAlign: 'center' }}>No XP data found</p>\n                ) : (\n                  <XPLineGraph data={xpObj} width={600} height={300} />\n                )}\n              </div>\n            </div>\n\n            {/* 2) ProjectPieChart (Pass/Fail ratio by project) */}\n            <div style={styles.chartCard}>\n              <h2 style={styles.chartTitle}>Project Pass/Fail (Pie)</h2>\n              <div style={{ width: '100%', height: '300px', display: 'flex', justifyContent: 'center' }}>\n                {Object.keys(projectObj).length === 0 ? (\n                  <p style={{ textAlign: 'center' }}>No project data found</p>\n                ) : (\n                  <ProjectPieChart data={projectObj} size={250} />\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* 3) AuditBarGraph (Monthly pass/fail from \"results\") */}\n          <div style={styles.chartCardFull}>\n            <h2 style={styles.chartTitle}>Monthly Audits</h2>\n            <div style={{ width: '100%', height: '300px' }}>\n              {Object.keys(auditObj).length === 0 ? (\n                <p style={{ textAlign: 'center' }}>No audit data found</p>\n              ) : (\n                <AuditBarGraph data={auditObj} width={600} height={300} />\n              )}\n            </div>\n          </div>\n\n        </div>\n      </main>\n    </div>\n  );\n}\n\n/** Inline Styles (no external CSS) **/\nconst styles = {\n  root: {\n    minHeight: '100vh',\n    backgroundColor: '#f8fafc',\n    fontFamily: '\"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif',\n    color: '#111'\n  },\n  centeredScreen: {\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f8fafc'\n  },\n  loadingText: {\n    fontSize: '24px',\n    color: '#555',\n    opacity: 0.8\n  },\n  errorText: {\n    fontSize: '24px',\n    color: 'red'\n  },\n  navbar: {\n    position: 'fixed',\n    top: 0,\n    width: '100%',\n    backgroundColor: '#fff',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    borderBottom: '1px solid #e2e8f0',\n    zIndex: 50,\n    height: '64px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  navWrapper: {\n    maxWidth: '1200px',\n    margin: '0 auto',\n    padding: '0 1rem',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem'\n  },\n  brandIcon: {\n    width: '32px',\n    height: '32px',\n    color: '#6b21a8'\n  },\n  brandText: {\n    fontSize: '1.25rem',\n    fontWeight: 'bold',\n    background: 'linear-gradient(90deg, #6b21a8, #6366F1)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent'\n  },\n  userInfoContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '1rem'\n  },\n  logoutBtn: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    background: 'linear-gradient(90deg, #ef4444, #ec4899)',\n    color: '#fff',\n    border: 'none',\n    padding: '0.6rem 1rem',\n    borderRadius: '8px',\n    cursor: 'pointer'\n  },\n  main: {\n    paddingTop: '80px',\n    paddingBottom: '1rem'\n  },\n  container: {\n    maxWidth: '1200px',\n    margin: '0 auto',\n    padding: '0 1rem'\n  },\n  welcomeSection: {\n    textAlign: 'center',\n    marginBottom: '2rem'\n  },\n  welcomeTitle: {\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    margin: 0,\n    color: '#1e293b'\n  },\n  welcomeSubtitle: {\n    marginTop: '0.5rem',\n    color: '#475569'\n  },\n  userInfoCard: {\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n    border: '1px solid #e2e8f0',\n    padding: '1rem',\n    marginBottom: '2rem'\n  },\n  userInfoTitle: {\n    fontSize: '1.25rem',\n    margin: '0 0 1rem',\n    color: '#1e293b',\n    textAlign: 'center'\n  },\n  userInfoGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    gap: '0.5rem'\n  },\n  userInfoItem: {\n    fontSize: '1rem',\n    padding: '0.5rem 0'\n  },\n  statsGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))',\n    gap: '1rem',\n    marginBottom: '2rem'\n  },\n  statsCard: {\n    transition: 'transform 0.2s'\n  },\n  statsCardInner: {\n    background: 'linear-gradient(135deg, #6b21a8, #4c1d95)',\n    borderRadius: '12px',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n    padding: '1rem',\n    color: '#fff',\n    display: 'flex',\n    gap: '1rem',\n    alignItems: 'center'\n  },\n  statsCardIcon: {\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    borderRadius: '8px',\n    padding: '0.5rem',\n    backdropFilter: 'blur(2px)'\n  },\n  statsCardLabel: {\n    margin: 0,\n    opacity: 0.8\n  },\n  statsCardValue: {\n    margin: 0,\n    fontSize: '1.5rem',\n    fontWeight: 'bold'\n  },\n  chartsGrid: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr', // 2 columns for the first row of charts\n    gap: '1rem',\n    marginBottom: '2rem'\n  },\n  chartCardWide: {\n    gridColumn: '1 / 2', // Left column\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n    padding: '1rem',\n    border: '1px solid #e2e8f0'\n  },\n  chartCard: {\n    gridColumn: '2 / 3', // Right column\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n    padding: '1rem',\n    border: '1px solid #e2e8f0'\n  },\n  chartCardFull: {\n    // Full width chart row\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n    padding: '1rem',\n    border: '1px solid #e2e8f0',\n    marginBottom: '1rem'\n  },\n  chartTitle: {\n    fontSize: '1.25rem',\n    margin: '0 0 1rem',\n    color: '#1e293b',\n    textAlign: 'center'\n  }\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAC9C,SAASC,OAAO,QAAQ,sBAAsB;;AAE9C;AACA,SACEC,MAAM,EACNC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,QAAQ,QACH,cAAc;;AAErB;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAGP,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,MAAMQ,aAAa,GAAIC,YAAY,IAAK;EACtC,OAAOA,YAAY,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,EAAE,KAAK;IACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,EAAE,CAACG,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;IACxDL,GAAG,CAACE,IAAI,CAAC,GAAG,CAACF,GAAG,CAACE,IAAI,CAAC,IAAI,CAAC,IAAID,EAAE,CAACK,MAAM;IACxC,OAAON,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;;AAED;AACA,MAAMO,kBAAkB,GAAIC,UAAU,IAAK;EACzC,OAAOA,UAAU,CAACT,MAAM,CAAC,CAACC,GAAG,EAAES,IAAI,KAAK;IAAA,IAAAC,YAAA;IACtC,MAAMC,WAAW,GAAG,EAAAD,YAAA,GAAAD,IAAI,CAACG,MAAM,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,IAAI,KAAIJ,IAAI,CAACK,IAAI;IAClD,IAAI,CAACd,GAAG,CAACW,WAAW,CAAC,EAAE;MACrBX,GAAG,CAACW,WAAW,CAAC,GAAG;QAAEI,MAAM,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAC;IACvD;IACAjB,GAAG,CAACW,WAAW,CAAC,CAACM,KAAK,EAAE;IACxB,IAAIR,IAAI,CAACS,KAAK,GAAG,CAAC,EAAElB,GAAG,CAACW,WAAW,CAAC,CAACI,MAAM,EAAE,CAAC,KACzCf,GAAG,CAACW,WAAW,CAAC,CAACK,MAAM,EAAE;IAC9B,OAAOhB,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;;AAED;AACA,MAAMmB,gBAAgB,GAAIC,OAAO,IAAK;EACpC,OAAOA,OAAO,CAACrB,MAAM,CAAC,CAACC,GAAG,EAAEqB,GAAG,KAAK;IAClC;IACA,MAAMC,KAAK,GAAG,IAAInB,IAAI,CAACkB,GAAG,CAACjB,SAAS,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;MAChEiB,KAAK,EAAE;IACT,CAAC,CAAC;IACF,IAAI,CAACtB,GAAG,CAACsB,KAAK,CAAC,EAAEtB,GAAG,CAACsB,KAAK,CAAC,GAAG;MAAEP,MAAM,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACtD,IAAIK,GAAG,CAACH,KAAK,GAAG,CAAC,EAAElB,GAAG,CAACsB,KAAK,CAAC,CAACP,MAAM,EAAE,CAAC,KAClCf,GAAG,CAACsB,KAAK,CAAC,CAACN,MAAM,EAAE;IACxB,OAAOhB,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMuB,WAAW,GAAGA,CAACC,MAAM,EAAEC,KAAK,EAAEC,MAAM,KAAK;EAC7C,OAAOF,MAAM,CACVG,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK,GAAGA,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAID,KAAK,CAACE,CAAC,GAAGL,KAAK,IAAIG,KAAK,CAACG,CAAC,GAAGL,MAAM,EAAE,CAAC,CAClFM,IAAI,CAAC,GAAG,CAAC;AACd,CAAC;;AAED;AACA,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAET,KAAK,EAAEC,MAAM,KAAK;EAC/C,MAAMS,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,GAAGE,MAAM,CAACC,MAAM,CAACJ,IAAI,CAAC,CAAC;EAC5C,MAAMK,OAAO,GAAGF,MAAM,CAACE,OAAO,CAACL,IAAI,CAAC;EACpC,IAAIK,OAAO,CAACC,MAAM,IAAI,CAAC,EAAE;IACvB;IACA,OAAOD,OAAO,CAACZ,GAAG,CAAC,CAAC,CAACc,CAAC,EAAEC,KAAK,CAAC,EAAEb,CAAC,MAAM;MACrCC,CAAC,EAAE,GAAG;MACNC,CAAC,EAAE,CAAC,GAAGW,KAAK,GAAGP;IACjB,CAAC,CAAC,CAAC;EACL;EACA,OAAOI,OAAO,CAACZ,GAAG,CAAC,CAAC,CAACc,CAAC,EAAEC,KAAK,CAAC,EAAEb,CAAC,MAAM;IACrCC,CAAC,EAAED,CAAC,IAAIU,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;IAC3BT,CAAC,EAAE,CAAC,GAAGW,KAAK,GAAGP;EACjB,CAAC,CAAC,CAAC;AACL,CAAC;;AAED;AACA;AACA;;AAEA;AACA,SAASQ,WAAWA,CAAC;EAAET,IAAI;EAAET,KAAK,GAAG,GAAG;EAAEC,MAAM,GAAG;AAAI,CAAC,EAAE;EACxD,MAAMF,MAAM,GAAGS,eAAe,CAACC,IAAI,EAAET,KAAK,EAAEC,MAAM,CAAC;EACnD,MAAMkB,CAAC,GAAGrB,WAAW,CAACC,MAAM,EAAEC,KAAK,EAAEC,MAAM,CAAC;;EAE5C;EACA,oBACEvC,KAAA,CAAA0D,aAAA;IAAKpB,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAACoB,OAAO,EAAE,OAAOrB,KAAK,IAAIC,MAAM,EAAG;IAACqB,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAU,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClGnE,KAAA,CAAA0D,aAAA;IACEU,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,SAAS;IAChBC,WAAW,EAAC,GAAG;IACfjC,MAAM,EAAE,KAAKE,MAAM,IAAID,KAAK,IAAIC,MAAM,EAAG;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1C,CAAC,eACFnE,KAAA,CAAA0D,aAAA;IAAMD,CAAC,EAAEA,CAAE;IAACY,MAAM,EAAC,SAAS;IAACC,WAAW,EAAC,GAAG;IAACF,IAAI,EAAC,MAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAC1D9B,MAAM,CAACG,GAAG,CAAC,CAAC+B,EAAE,EAAEC,GAAG,kBAClBxE,KAAA,CAAA0D,aAAA;IACEe,GAAG,EAAED,GAAI;IACTE,EAAE,EAAEH,EAAE,CAAC5B,CAAC,GAAGL,KAAM;IACjBqC,EAAE,EAAEJ,EAAE,CAAC3B,CAAC,GAAGL,MAAO;IAClBqC,CAAC,EAAC,GAAG;IACLR,IAAI,EAAC,SAAS;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACf,CACF,CACE,CAAC;AAEV;;AAEA;AACA;AACA,SAASU,eAAeA,CAAC;EAAE9B,IAAI;EAAE+B,IAAI,GAAG;AAAI,CAAC,EAAE;EAC7C;EACA,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,WAAW,GAAG,CAAC;EACnB9B,MAAM,CAACC,MAAM,CAACJ,IAAI,CAAC,CAACkC,OAAO,CAAC,CAAC;IAAErD,MAAM;IAAEC;EAAO,CAAC,KAAK;IAClDkD,WAAW,IAAInD,MAAM;IACrBoD,WAAW,IAAInD,MAAM;EACvB,CAAC,CAAC;EACF,MAAMC,KAAK,GAAGiD,WAAW,GAAGC,WAAW,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAME,WAAW,GAAIH,WAAW,GAAGjD,KAAK,GAAI,CAAC,GAAGmB,IAAI,CAACkC,EAAE;;EAEvD;EACA,MAAMC,MAAM,GAAGN,IAAI,GAAG,CAAC;EACvB,MAAMO,MAAM,GAAGP,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;;EAE9B;EACA,MAAMQ,gBAAgB,GAAGA,CAACZ,EAAE,EAAEC,EAAE,EAAEC,CAAC,EAAEW,KAAK,KAAK,CAC7Cb,EAAE,GAAGE,CAAC,GAAG3B,IAAI,CAACuC,GAAG,CAACD,KAAK,CAAC,EACxBZ,EAAE,GAAGC,CAAC,GAAG3B,IAAI,CAACwC,GAAG,CAACF,KAAK,CAAC,CACzB;;EAED;EACA,MAAMG,QAAQ,GAAGA,CAACC,UAAU,EAAEC,QAAQ,EAAEC,KAAK,KAAK;IAChD,MAAMC,QAAQ,GAAGF,QAAQ,GAAGD,UAAU,GAAG1C,IAAI,CAACkC,EAAE,GAAG,CAAC,GAAG,CAAC;IACxD,MAAM,CAACY,MAAM,EAAEC,MAAM,CAAC,GAAGV,gBAAgB,CAACF,MAAM,EAAEA,MAAM,EAAEC,MAAM,EAAEM,UAAU,CAAC;IAC7E,MAAM,CAACM,IAAI,EAAEC,IAAI,CAAC,GAAGZ,gBAAgB,CAACF,MAAM,EAAEA,MAAM,EAAEC,MAAM,EAAEO,QAAQ,CAAC;IACvE,oBACE5F,KAAA,CAAA0D,aAAA;MACED,CAAC,EAAE,CACD,KAAKsC,MAAM,IAAIC,MAAM,EAAE,EACvB,KAAKX,MAAM,IAAIA,MAAM,MAAMS,QAAQ,MAAMG,IAAI,IAAIC,IAAI,EAAE,EACvD,KAAKd,MAAM,IAAIA,MAAM,EAAE,EACvB,GAAG,CACJ,CAACvC,IAAI,CAAC,GAAG,CAAE;MACZuB,IAAI,EAAEyB,KAAM;MAAA/B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACb,CAAC;EAEN,CAAC;EAED,oBACEnE,KAAA,CAAA0D,aAAA;IAAKpB,KAAK,EAAEwC,IAAK;IAACvC,MAAM,EAAEuC,IAAK;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE5BuB,QAAQ,CAAC,CAAC,EAAER,WAAW,EAAE,SAAS,CAAC,EAEnCQ,QAAQ,CAACR,WAAW,EAAE,CAAC,GAAGjC,IAAI,CAACkC,EAAE,EAAE,SAAS,CAAC,eAC9CnF,KAAA,CAAA0D,aAAA;IAAQgB,EAAE,EAAEU,MAAO;IAACT,EAAE,EAAES,MAAO;IAACR,CAAC,EAAES,MAAM,GAAG,GAAI;IAACjB,IAAI,EAAC,MAAM;IAAC+B,OAAO,EAAE,GAAI;IAAArC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAE7EnE,KAAA,CAAA0D,aAAA;IACEf,CAAC,EAAEyC,MAAO;IACVxC,CAAC,EAAEwC,MAAO;IACVgB,UAAU,EAAC,QAAQ;IACnBhC,IAAI,EAAC,MAAM;IACXiC,QAAQ,EAAC,MAAM;IACfC,UAAU,EAAC,MAAM;IACjBC,EAAE,EAAC,MAAM;IAAAzC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAER,SAASY,WAAW,WAAWC,WAAW,EACvC,CACH,CAAC;AAEV;;AAEA;AACA,SAASwB,aAAaA,CAAC;EAAEzD,IAAI;EAAET,KAAK,GAAG,GAAG;EAAEC,MAAM,GAAG;AAAI,CAAC,EAAE;EAC1D,MAAMkE,MAAM,GAAGvD,MAAM,CAACwD,IAAI,CAAC3D,IAAI,CAAC;EAChC,IAAI,CAAC0D,MAAM,CAACpD,MAAM,EAAE;IAClB,oBAAOrD,KAAA,CAAA0D,aAAA;MAAAI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,qBAAsB,CAAC;EACnC;;EAEA;EACA,IAAIwC,QAAQ,GAAG,CAAC;EAChBF,MAAM,CAACxB,OAAO,CAAE9C,KAAK,IAAK;IACxB,MAAM;MAAEP,MAAM;MAAEC;IAAO,CAAC,GAAGkB,IAAI,CAACZ,KAAK,CAAC;IACtC,MAAML,KAAK,GAAGF,MAAM,GAAGC,MAAM;IAC7B,IAAIC,KAAK,GAAG6E,QAAQ,EAAE;MACpBA,QAAQ,GAAG7E,KAAK;IAClB;EACF,CAAC,CAAC;EACF6E,QAAQ,GAAGA,QAAQ,IAAI,CAAC;EAExB,MAAMC,QAAQ,GAAGtE,KAAK,IAAImE,MAAM,CAACpD,MAAM,GAAG,CAAC,CAAC;EAE5C,oBACErD,KAAA,CAAA0D,aAAA;IACEpB,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,MAAM;IACboB,OAAO,EAAE,OAAOrB,KAAK,IAAIC,MAAM,EAAG;IAClCqB,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAU,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAGjCnE,KAAA,CAAA0D,aAAA;IACEmD,EAAE,EAAC,GAAG;IACNC,EAAE,EAAEvE,MAAM,GAAG,CAAE;IACfwE,EAAE,EAAEzE,KAAM;IACV0E,EAAE,EAAEzE,MAAM,GAAG,CAAE;IACf8B,MAAM,EAAC,MAAM;IACbC,WAAW,EAAC,GAAG;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChB,CAAC,EACDsC,MAAM,CAACjE,GAAG,CAAC,CAACL,KAAK,EAAEqC,GAAG,KAAK;IAC1B,MAAM;MAAE5C,MAAM;MAAEC;IAAO,CAAC,GAAGkB,IAAI,CAACZ,KAAK,CAAC;IACtC,MAAML,KAAK,GAAGF,MAAM,GAAGC,MAAM;IAC7B;IACA,MAAMoF,SAAS,GAAInF,KAAK,GAAG6E,QAAQ,IAAKpE,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;IACtD,MAAMI,CAAC,GAAG6B,GAAG,IAAIoC,QAAQ,GAAG,CAAC,CAAC,GAAGA,QAAQ;IACzC,MAAMhE,CAAC,GAAGL,MAAM,GAAG0E,SAAS,GAAG,CAAC;IAEhC,oBACEjH,KAAA,CAAA0D,aAAA;MAAGe,GAAG,EAAEtC,KAAM;MAAA2B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAEZnE,KAAA,CAAA0D,aAAA;MACEf,CAAC,EAAEA,CAAC,GAAIiE,QAAQ,GAAG,CAAG;MACtBhE,CAAC,EAAEA,CAAE;MACLN,KAAK,EAAEsE,QAAS;MAChBrE,MAAM,EAAE0E,SAAU;MAClB7C,IAAI,EAAC,SAAS;MACd+B,OAAO,EAAE,GAAI;MAAArC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACd,CAAC,EAEDvC,MAAM,GAAG,CAAC,iBACT5B,KAAA,CAAA0D,aAAA;MACEf,CAAC,EAAEA,CAAC,GAAIiE,QAAQ,GAAG,CAAG;MACtBhE,CAAC,EAAEA,CAAC,GAAGqE,SAAS,IAAI,CAAC,GAAGrF,MAAM,GAAGE,KAAK,CAAE;MACxCQ,KAAK,EAAEsE,QAAS;MAChBrE,MAAM,EAAE0E,SAAS,IAAIrF,MAAM,GAAGE,KAAK,CAAE;MACrCsC,IAAI,EAAC,SAAS;MAAAN,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACf,CACF,eAEDnE,KAAA,CAAA0D,aAAA;MACEf,CAAC,EAAEA,CAAE;MACLC,CAAC,EAAEL,MAAM,GAAG,CAAE;MACd6D,UAAU,EAAC,QAAQ;MACnBhC,IAAI,EAAC,MAAM;MACXiC,QAAQ,EAAC,QAAQ;MAAAvC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEhBhC,KACG,CACL,CAAC;EAER,CAAC,CACE,CAAC;AAEV;;AAEA;AACA;AACA;AACA,eAAe,SAAS+E,OAAOA,CAAA,EAAG;EAAA,IAAAC,UAAA;EAChC,MAAM;IAAEC;EAAO,CAAC,GAAGjH,OAAO,CAAC,CAAC;EAC5B,MAAM;IAAEkH,OAAO;IAAEC,KAAK;IAAEvE;EAAK,CAAC,GAAG9C,QAAQ,CAACQ,aAAa,CAAC;EAExD,IAAI4G,OAAO,EAAE;IACX,oBACErH,KAAA,CAAA0D,aAAA;MAAKE,KAAK,EAAE2D,MAAM,CAACC,cAAe;MAAA1D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAChCnE,KAAA,CAAA0D,aAAA;MAAKE,KAAK,EAAE2D,MAAM,CAACE,WAAY;MAAA3D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,YAAe,CAC5C,CAAC;EAEV;EAEA,IAAImD,KAAK,EAAE;IACT,oBACEtH,KAAA,CAAA0D,aAAA;MAAKE,KAAK,EAAE2D,MAAM,CAACC,cAAe;MAAA1D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAChCnE,KAAA,CAAA0D,aAAA;MAAKE,KAAK,EAAE2D,MAAM,CAACG,SAAU;MAAA5D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,oBAAuB,CAClD,CAAC;EAEV;;EAEA;EACA,MAAMwD,IAAI,GAAG5E,IAAI,aAAJA,IAAI,wBAAAoE,UAAA,GAAJpE,IAAI,CAAE4E,IAAI,cAAAR,UAAA,uBAAVA,UAAA,CAAa,CAAC,CAAC;EAC5B,IAAI,CAACQ,IAAI,EAAE,OAAO,IAAI;;EAEtB;EACA,MAAMC,KAAK,GAAGlH,aAAa,CAACiH,IAAI,CAAChH,YAAY,IAAI,EAAE,CAAC;;EAEpD;EACA;;EAEA;EACA,MAAMkH,UAAU,GAAGzG,kBAAkB,CAACuG,IAAI,CAACtG,UAAU,IAAI,EAAE,CAAC;;EAE5D;EACA,MAAMyG,QAAQ,GAAG9F,gBAAgB,CAAC2F,IAAI,CAAC1F,OAAO,IAAI,EAAE,CAAC;;EAErD;EACA,MAAM8F,OAAO,GAAG7E,MAAM,CAACC,MAAM,CAACyE,KAAK,CAAC,CAAChH,MAAM,CAAC,CAACC,GAAG,EAAEmH,GAAG,KAAKnH,GAAG,GAAGmH,GAAG,EAAE,CAAC,CAAC;EACvE,MAAMjD,WAAW,GAAG7B,MAAM,CAACC,MAAM,CAAC0E,UAAU,CAAC,CAACjH,MAAM,CAAC,CAACC,GAAG,EAAEoH,IAAI,KAAKpH,GAAG,GAAGoH,IAAI,CAACrG,MAAM,EAAE,CAAC,CAAC;EACzF,MAAMoD,WAAW,GAAG9B,MAAM,CAACC,MAAM,CAAC0E,UAAU,CAAC,CAACjH,MAAM,CAAC,CAACC,GAAG,EAAEoH,IAAI,KAAKpH,GAAG,GAAGoH,IAAI,CAACpG,MAAM,EAAE,CAAC,CAAC;EACzF,MAAMqG,aAAa,GAAGnD,WAAW,GAAGC,WAAW;EAC/C,MAAMmD,UAAU,GAAGD,aAAa,GAAG,CAAEnD,WAAW,GAAGmD,aAAa,GAAI,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;EACvF,MAAMC,aAAa,GAAGpF,IAAI,CAACqF,KAAK,CAACP,OAAO,GAAG,GAAG,CAAC;EAE/C,oBACE/H,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACgB,IAAK;IAAAzE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEtBnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACiB,MAAO;IAAA1E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACkB,UAAW;IAAA3E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE5BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACmB,cAAe;IAAA5E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCnE,KAAA,CAAA0D,aAAA,CAAClD,QAAQ;IAACoD,KAAK,EAAE2D,MAAM,CAACoB,SAAU;IAAA7E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACrCnE,KAAA,CAAA0D,aAAA;IAAME,KAAK,EAAE2D,MAAM,CAACqB,SAAU;IAAA9E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAAwB,CACpD,CAAC,eAENnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACsB,iBAAkB;IAAA/E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnCnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE;MAAEkF,SAAS,EAAE;IAAQ,CAAE;IAAAhF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjCnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE;MAAEmF,MAAM,EAAE,CAAC;MAAEzC,UAAU,EAAE;IAAI,CAAE;IAAAxC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEwD,IAAI,CAACqB,KAAS,CAAC,eAC1DhJ,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE;MAAEmF,MAAM,EAAE,CAAC;MAAE1C,QAAQ,EAAE,QAAQ;MAAER,KAAK,EAAE;IAAO,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MACtD,EAACwD,IAAI,CAACsB,EACT,CACA,CAAC,eACNjJ,KAAA,CAAA0D,aAAA;IAAQwF,OAAO,EAAE9B,MAAO;IAACxD,KAAK,EAAE2D,MAAM,CAAC4B,SAAU;IAAArF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/CnE,KAAA,CAAA0D,aAAA,CAACtD,MAAM;IAAC0E,IAAI,EAAE,EAAG;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpBnE,KAAA,CAAA0D,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,QAAY,CACZ,CACL,CACF,CACF,CAAC,eAGNnE,KAAA,CAAA0D,aAAA;IAAME,KAAK,EAAE2D,MAAM,CAAC6B,IAAK;IAAAtF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAAC8B,SAAU;IAAAvF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE3BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAAC+B,cAAe;IAAAxF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCnE,KAAA,CAAA0D,aAAA;IAAIE,KAAK,EAAE2D,MAAM,CAACgC,YAAa;IAAAzF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAChB,EAACwD,IAAI,CAACqB,KAAK,EAAC,GACxB,CAAC,eACLhJ,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAACiC,eAAgB;IAAA1F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wCAE/B,CACA,CAAC,eAGNnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACkC,YAAa;IAAA3F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BnE,KAAA,CAAA0D,aAAA;IAAIE,KAAK,EAAE2D,MAAM,CAACmC,aAAc;IAAA5F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kBAAoB,CAAC,eACtDnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACoC,YAAa;IAAA7F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACqC,YAAa;IAAA9F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BnE,KAAA,CAAA0D,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,KAAW,CAAC,KAAC,EAACwD,IAAI,CAACsB,EACxB,CAAC,eACNjJ,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACqC,YAAa;IAAA9F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BnE,KAAA,CAAA0D,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,QAAc,CAAC,KAAC,EAACwD,IAAI,CAACqB,KAC3B,CACF,CACF,CAAC,eAGNhJ,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACsC,SAAU;IAAA/F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE3BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACuC,SAAU;IAAAhG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACwC,cAAe;IAAAjG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACyC,aAAc;IAAAlG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BnE,KAAA,CAAA0D,aAAA,CAACpD,UAAU;IAACsD,KAAK,EAAE;MAAEiC,KAAK,EAAE;IAAO,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACpC,CAAC,eACNnE,KAAA,CAAA0D,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAAC0C,cAAe;IAAAnG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAW,CAAC,eAC7CnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAAC2C,cAAe;IAAApG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7B4D,OAAO,CAACoC,cAAc,CAAC,CACvB,CACA,CACF,CACF,CAAC,eAGNnK,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACuC,SAAU;IAAAhG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACwC,cAAe;IAAAjG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACyC,aAAc;IAAAlG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BnE,KAAA,CAAA0D,aAAA,CAACrD,KAAK;IAACuD,KAAK,EAAE;MAAEiC,KAAK,EAAE;IAAO,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC/B,CAAC,eACNnE,KAAA,CAAA0D,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAAC0C,cAAe;IAAAnG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAc,CAAC,eAChDnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAAC2C,cAAe;IAAApG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEgE,UAAU,EAAC,GAAI,CAC9C,CACF,CACF,CAAC,eAGNnI,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACuC,SAAU;IAAAhG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACwC,cAAe;IAAAjG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACyC,aAAc;IAAAlG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BnE,KAAA,CAAA0D,aAAA,CAACrD,KAAK;IAACuD,KAAK,EAAE;MAAEiC,KAAK,EAAE;IAAO,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC/B,CAAC,eACNnE,KAAA,CAAA0D,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAAC0C,cAAe;IAAAnG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAgB,CAAC,eAClDnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAAC2C,cAAe;IAAApG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE+D,aAAiB,CAChD,CACF,CACF,CAAC,eAGNlI,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACuC,SAAU;IAAAhG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACwC,cAAe;IAAAjG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACyC,aAAc;IAAAlG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BnE,KAAA,CAAA0D,aAAA,CAACnD,KAAK;IAACqD,KAAK,EAAE;MAAEiC,KAAK,EAAE;IAAO,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC/B,CAAC,eACNnE,KAAA,CAAA0D,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAAC0C,cAAe;IAAAnG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAiB,CAAC,eACnDnE,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE2D,MAAM,CAAC2C,cAAe;IAAApG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEkE,aAAiB,CAChD,CACF,CACF,CACF,CAAC,eAGNrI,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAAC6C,UAAW;IAAAtG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE5BnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAAC8C,aAAc;IAAAvG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BnE,KAAA,CAAA0D,aAAA;IAAIE,KAAK,EAAE2D,MAAM,CAAC+C,UAAW;IAAAxG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAgB,CAAC,eAC/CnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE;MAAEtB,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5CjB,MAAM,CAACwD,IAAI,CAACkB,KAAK,CAAC,CAACvE,MAAM,KAAK,CAAC,gBAC9BrD,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE;MAAEkF,SAAS,EAAE;IAAS,CAAE;IAAAhF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kBAAmB,CAAC,gBAEvDnE,KAAA,CAAA0D,aAAA,CAACF,WAAW;IAACT,IAAI,EAAE6E,KAAM;IAACtF,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,GAAI;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAEnD,CACF,CAAC,eAGNnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACgD,SAAU;IAAAzG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BnE,KAAA,CAAA0D,aAAA;IAAIE,KAAK,EAAE2D,MAAM,CAAC+C,UAAW;IAAAxG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,yBAA2B,CAAC,eAC1DnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE;MAAEtB,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEiI,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAA3G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvFjB,MAAM,CAACwD,IAAI,CAACmB,UAAU,CAAC,CAACxE,MAAM,KAAK,CAAC,gBACnCrD,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE;MAAEkF,SAAS,EAAE;IAAS,CAAE;IAAAhF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,uBAAwB,CAAC,gBAE5DnE,KAAA,CAAA0D,aAAA,CAACmB,eAAe;IAAC9B,IAAI,EAAE8E,UAAW;IAAC/C,IAAI,EAAE,GAAI;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAE9C,CACF,CACF,CAAC,eAGNnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE2D,MAAM,CAACmD,aAAc;IAAA5G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BnE,KAAA,CAAA0D,aAAA;IAAIE,KAAK,EAAE2D,MAAM,CAAC+C,UAAW;IAAAxG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAkB,CAAC,eACjDnE,KAAA,CAAA0D,aAAA;IAAKE,KAAK,EAAE;MAAEtB,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5CjB,MAAM,CAACwD,IAAI,CAACoB,QAAQ,CAAC,CAACzE,MAAM,KAAK,CAAC,gBACjCrD,KAAA,CAAA0D,aAAA;IAAGE,KAAK,EAAE;MAAEkF,SAAS,EAAE;IAAS,CAAE;IAAAhF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qBAAsB,CAAC,gBAE1DnE,KAAA,CAAA0D,aAAA,CAAC8C,aAAa;IAACzD,IAAI,EAAE+E,QAAS;IAACxF,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,GAAI;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAExD,CACF,CAEF,CACD,CACH,CAAC;AAEV;;AAEA;AACA,MAAMoD,MAAM,GAAG;EACbgB,IAAI,EAAE;IACJoC,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,iDAAiD;IAC7DhF,KAAK,EAAE;EACT,CAAC;EACD2B,cAAc,EAAE;IACdmD,SAAS,EAAE,OAAO;IAClBH,OAAO,EAAE,MAAM;IACfM,UAAU,EAAE,QAAQ;IACpBL,cAAc,EAAE,QAAQ;IACxBG,eAAe,EAAE;EACnB,CAAC;EACDnD,WAAW,EAAE;IACXpB,QAAQ,EAAE,MAAM;IAChBR,KAAK,EAAE,MAAM;IACbM,OAAO,EAAE;EACX,CAAC;EACDuB,SAAS,EAAE;IACTrB,QAAQ,EAAE,MAAM;IAChBR,KAAK,EAAE;EACT,CAAC;EACD2C,MAAM,EAAE;IACNuC,QAAQ,EAAE,OAAO;IACjBC,GAAG,EAAE,CAAC;IACN1I,KAAK,EAAE,MAAM;IACbsI,eAAe,EAAE,MAAM;IACvBK,SAAS,EAAE,2BAA2B;IACtCC,YAAY,EAAE,mBAAmB;IACjCC,MAAM,EAAE,EAAE;IACV5I,MAAM,EAAE,MAAM;IACdiI,OAAO,EAAE,MAAM;IACfM,UAAU,EAAE;EACd,CAAC;EACDrC,UAAU,EAAE;IACV2C,QAAQ,EAAE,QAAQ;IAClBrC,MAAM,EAAE,QAAQ;IAChBsC,OAAO,EAAE,QAAQ;IACjB/I,KAAK,EAAE,MAAM;IACbkI,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE;EAClB,CAAC;EACD/B,cAAc,EAAE;IACd8B,OAAO,EAAE,MAAM;IACfM,UAAU,EAAE,QAAQ;IACpBQ,GAAG,EAAE;EACP,CAAC;EACD3C,SAAS,EAAE;IACTrG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdsD,KAAK,EAAE;EACT,CAAC;EACD+C,SAAS,EAAE;IACTvC,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE,MAAM;IAClBzC,UAAU,EAAE,0CAA0C;IACtD0H,oBAAoB,EAAE,MAAM;IAC5BC,mBAAmB,EAAE;EACvB,CAAC;EACD3C,iBAAiB,EAAE;IACjB2B,OAAO,EAAE,MAAM;IACfM,UAAU,EAAE,QAAQ;IACpBQ,GAAG,EAAE;EACP,CAAC;EACDnC,SAAS,EAAE;IACTqB,OAAO,EAAE,MAAM;IACfM,UAAU,EAAE,QAAQ;IACpBQ,GAAG,EAAE,QAAQ;IACbzH,UAAU,EAAE,0CAA0C;IACtDgC,KAAK,EAAE,MAAM;IACb4F,MAAM,EAAE,MAAM;IACdJ,OAAO,EAAE,aAAa;IACtBK,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE;EACV,CAAC;EACDvC,IAAI,EAAE;IACJwC,UAAU,EAAE,MAAM;IAClBC,aAAa,EAAE;EACjB,CAAC;EACDxC,SAAS,EAAE;IACT+B,QAAQ,EAAE,QAAQ;IAClBrC,MAAM,EAAE,QAAQ;IAChBsC,OAAO,EAAE;EACX,CAAC;EACD/B,cAAc,EAAE;IACdR,SAAS,EAAE,QAAQ;IACnBgD,YAAY,EAAE;EAChB,CAAC;EACDvC,YAAY,EAAE;IACZlD,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClByC,MAAM,EAAE,CAAC;IACTlD,KAAK,EAAE;EACT,CAAC;EACD2D,eAAe,EAAE;IACfuC,SAAS,EAAE,QAAQ;IACnBlG,KAAK,EAAE;EACT,CAAC;EACD4D,YAAY,EAAE;IACZmB,eAAe,EAAE,MAAM;IACvBc,YAAY,EAAE,MAAM;IACpBT,SAAS,EAAE,2BAA2B;IACtCQ,MAAM,EAAE,mBAAmB;IAC3BJ,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE;EAChB,CAAC;EACDpC,aAAa,EAAE;IACbrD,QAAQ,EAAE,SAAS;IACnB0C,MAAM,EAAE,UAAU;IAClBlD,KAAK,EAAE,SAAS;IAChBiD,SAAS,EAAE;EACb,CAAC;EACDa,YAAY,EAAE;IACZa,OAAO,EAAE,MAAM;IACfwB,mBAAmB,EAAE,uCAAuC;IAC5DV,GAAG,EAAE;EACP,CAAC;EACD1B,YAAY,EAAE;IACZvD,QAAQ,EAAE,MAAM;IAChBgF,OAAO,EAAE;EACX,CAAC;EACDxB,SAAS,EAAE;IACTW,OAAO,EAAE,MAAM;IACfwB,mBAAmB,EAAE,sCAAsC;IAC3DV,GAAG,EAAE,MAAM;IACXQ,YAAY,EAAE;EAChB,CAAC;EACDhC,SAAS,EAAE;IACTmC,UAAU,EAAE;EACd,CAAC;EACDlC,cAAc,EAAE;IACdlG,UAAU,EAAE,2CAA2C;IACvD6H,YAAY,EAAE,MAAM;IACpBT,SAAS,EAAE,2BAA2B;IACtCI,OAAO,EAAE,MAAM;IACfxF,KAAK,EAAE,MAAM;IACb2E,OAAO,EAAE,MAAM;IACfc,GAAG,EAAE,MAAM;IACXR,UAAU,EAAE;EACd,CAAC;EACDd,aAAa,EAAE;IACbY,eAAe,EAAE,uBAAuB;IACxCc,YAAY,EAAE,KAAK;IACnBL,OAAO,EAAE,QAAQ;IACjBa,cAAc,EAAE;EAClB,CAAC;EACDjC,cAAc,EAAE;IACdlB,MAAM,EAAE,CAAC;IACT5C,OAAO,EAAE;EACX,CAAC;EACD+D,cAAc,EAAE;IACdnB,MAAM,EAAE,CAAC;IACT1C,QAAQ,EAAE,QAAQ;IAClBC,UAAU,EAAE;EACd,CAAC;EACD8D,UAAU,EAAE;IACVI,OAAO,EAAE,MAAM;IACfwB,mBAAmB,EAAE,SAAS;IAAE;IAChCV,GAAG,EAAE,MAAM;IACXQ,YAAY,EAAE;EAChB,CAAC;EACDzB,aAAa,EAAE;IACb8B,UAAU,EAAE,OAAO;IAAE;IACrBvB,eAAe,EAAE,MAAM;IACvBc,YAAY,EAAE,MAAM;IACpBT,SAAS,EAAE,2BAA2B;IACtCI,OAAO,EAAE,MAAM;IACfI,MAAM,EAAE;EACV,CAAC;EACDlB,SAAS,EAAE;IACT4B,UAAU,EAAE,OAAO;IAAE;IACrBvB,eAAe,EAAE,MAAM;IACvBc,YAAY,EAAE,MAAM;IACpBT,SAAS,EAAE,2BAA2B;IACtCI,OAAO,EAAE,MAAM;IACfI,MAAM,EAAE;EACV,CAAC;EACDf,aAAa,EAAE;IACb;IACAE,eAAe,EAAE,MAAM;IACvBc,YAAY,EAAE,MAAM;IACpBT,SAAS,EAAE,2BAA2B;IACtCI,OAAO,EAAE,MAAM;IACfI,MAAM,EAAE,mBAAmB;IAC3BK,YAAY,EAAE;EAChB,CAAC;EACDxB,UAAU,EAAE;IACVjE,QAAQ,EAAE,SAAS;IACnB0C,MAAM,EAAE,UAAU;IAClBlD,KAAK,EAAE,SAAS;IAChBiD,SAAS,EAAE;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}