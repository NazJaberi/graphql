{"ast":null,"code":"var _jsxFileName = \"/home/naz/graphql/src/pages/Profile.js\";\nimport React, { useEffect, useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { BarChart, PieChart } from 'react-svg-charts';\n\n// GraphQL query to fetch user data\nconst GET_USER_DATA = gql`\n  query GetUserData($userId: Int!) {\n    user(where: { id: { _eq: $userId } }) {\n      id\n      login\n    }\n    transaction(where: { userId: { _eq: $userId }, type: { _eq: \"xp\" } }) {\n      amount\n      createdAt\n    }\n    progress(where: { userId: { _eq: $userId } }) {\n      grade\n      objectId\n    }\n  }\n`;\nconst ProfilePage = ({\n  userId\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_USER_DATA, {\n    variables: {\n      userId\n    }\n  });\n  const [xpData, setXpData] = useState([]);\n  const [progressData, setProgressData] = useState([]);\n  useEffect(() => {\n    if (data) {\n      // Prepare XP data for the bar chart\n      const xpChartData = data.transaction.map(txn => ({\n        label: new Date(txn.createdAt).toLocaleDateString(),\n        value: txn.amount\n      }));\n      setXpData(xpChartData);\n\n      // Prepare progress data for the pie chart\n      const passFailData = [{\n        label: 'Pass',\n        value: data.progress.filter(p => p.grade === 1).length\n      }, {\n        label: 'Fail',\n        value: data.progress.filter(p => p.grade === 0).length\n      }];\n      setProgressData(passFailData);\n    }\n  }, [data]);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Profile Page\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"User Information\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"ID: \", data.user[0].id), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Login: \", data.user[0].login), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"XP Over Time\"), /*#__PURE__*/React.createElement(BarChart, {\n    data: xpData,\n    width: 500,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Pass/Fail Ratio\"), /*#__PURE__*/React.createElement(PieChart, {\n    data: progressData,\n    width: 300,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\nexport default ProfilePage;","map":{"version":3,"names":["React","useEffect","useState","gql","useQuery","BarChart","PieChart","GET_USER_DATA","ProfilePage","userId","loading","error","data","variables","xpData","setXpData","progressData","setProgressData","xpChartData","transaction","map","txn","label","Date","createdAt","toLocaleDateString","value","amount","passFailData","progress","filter","p","grade","length","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","user","id","login","width","height"],"sources":["/home/naz/graphql/src/pages/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { BarChart, PieChart } from 'react-svg-charts';\n\n// GraphQL query to fetch user data\nconst GET_USER_DATA = gql`\n  query GetUserData($userId: Int!) {\n    user(where: { id: { _eq: $userId } }) {\n      id\n      login\n    }\n    transaction(where: { userId: { _eq: $userId }, type: { _eq: \"xp\" } }) {\n      amount\n      createdAt\n    }\n    progress(where: { userId: { _eq: $userId } }) {\n      grade\n      objectId\n    }\n  }\n`;\n\nconst ProfilePage = ({ userId }) => {\n  const { loading, error, data } = useQuery(GET_USER_DATA, {\n    variables: { userId },\n  });\n\n  const [xpData, setXpData] = useState([]);\n  const [progressData, setProgressData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // Prepare XP data for the bar chart\n      const xpChartData = data.transaction.map((txn) => ({\n        label: new Date(txn.createdAt).toLocaleDateString(),\n        value: txn.amount,\n      }));\n      setXpData(xpChartData);\n\n      // Prepare progress data for the pie chart\n      const passFailData = [\n        { label: 'Pass', value: data.progress.filter((p) => p.grade === 1).length },\n        { label: 'Fail', value: data.progress.filter((p) => p.grade === 0).length },\n      ];\n      setProgressData(passFailData);\n    }\n  }, [data]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div>\n      <h1>Profile Page</h1>\n      <h2>User Information</h2>\n      <p>ID: {data.user[0].id}</p>\n      <p>Login: {data.user[0].login}</p>\n\n      <h2>XP Over Time</h2>\n      <BarChart data={xpData} width={500} height={300} />\n\n      <h2>Pass/Fail Ratio</h2>\n      <PieChart data={progressData} width={300} height={300} />\n    </div>\n  );\n};\n\nexport default ProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}