{"ast":null,"code":"var _jsxFileName = \"/home/naz/graphql/src/utils/AuthContext.js\";\nimport React, { createContext, useState, useContext } from 'react';\nconst AuthContext = createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const login = newToken => {\n    console.log('Login called with token:', newToken);\n    if (newToken) {\n      setToken(newToken);\n      localStorage.setItem('token', newToken);\n      console.log('Token stored:', newToken);\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useContext","AuthContext","AuthProvider","children","token","setToken","localStorage","getItem","login","newToken","console","log","setItem","logout","removeItem","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useAuth","context","Error"],"sources":["/home/naz/graphql/src/utils/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [token, setToken] = useState(localStorage.getItem('token'));\n\n    const login = (newToken) => {\n        console.log('Login called with token:', newToken);\n        if (newToken) {\n            setToken(newToken);\n            localStorage.setItem('token', newToken);\n            console.log('Token stored:', newToken);\n        }\n    };\n\n    const logout = () => {\n        setToken(null);\n        localStorage.removeItem('token');\n    };\n\n    return (\n        <AuthContext.Provider value={{ token, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n\nexport default AuthContext;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAElE,MAAMC,WAAW,GAAGH,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjE,MAAMC,KAAK,GAAIC,QAAQ,IAAK;IACxBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;IACjD,IAAIA,QAAQ,EAAE;MACVJ,QAAQ,CAACI,QAAQ,CAAC;MAClBH,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACjBR,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC;EAED,oBACIjB,KAAA,CAAAkB,aAAA,CAACd,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEI,KAAK;MAAEK;IAAO,CAAE;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjDpB,QACiB,CAAC;AAE/B,CAAC;AAED,OAAO,MAAMqB,OAAO,GAAGA,CAAA,KAAM;EACzB,MAAMC,OAAO,GAAGzB,UAAU,CAACC,WAAW,CAAC;EACvC,IAAI,CAACwB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAED,eAAexB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}